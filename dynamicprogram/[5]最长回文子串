// 给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。
//
// 示例 1：
//
// 输入: "babad"
// 输出: "bab"
// 注意: "aba" 也是一个有效答案。
//
//
// 示例 2：
//
// 输入: "cbbd"
// 输出: "bb"
//
// Related Topics 字符串 动态规划
// 👍 2997 👎 0

// leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public String longestPalindrome(String s) {
        if (s.length() < 0) {
            return "";
        }
        int len = s.length();
        char[] arr = new char[len];
        for (int i = 0; i < len; i++) {
            arr[i] = s.charAt(len - i - 1);
        }
        boolean[][] dp = new boolean[len][len];
        int max = 1, left = 0;
        for (int i = len - 1; i >= 0; i--) {
            dp[i][i] = true;
            for (int j = i + 1; j < len; j++) {
                if (arr[i] == arr[j]) {
                    dp[i][j] = i > j - 2 || dp[i + 1][j - 1];
                } else {
                    dp[i][j] = false;
                }
                if (dp[i][j]) {
                    int tmp = j - i + 1;
                    if (max < tmp) {
                        max = tmp;
                        left = i;
                    }
                }
            }
        }
        return new String(arr, left, max);
    }
}
// leetcode submit region end(Prohibit modification and deletion)
