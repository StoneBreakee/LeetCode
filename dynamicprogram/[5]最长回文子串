// 给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。
//
// 示例 1：
//
// 输入: "babad"
// 输出: "bab"
// 注意: "aba" 也是一个有效答案。
//
//
// 示例 2：
//
// 输入: "cbbd"
// 输出: "bb"
//
// Related Topics 字符串 动态规划
// 👍 2997 👎 0

// leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public String longestPalindrome(String s) {
        // 使用中心扩散法
        // 注意奇数和偶数的情况
        int len = s.length();
        char[] arr = s.toCharArray();
        int max = 0, start = 0, end = 0;
        int len1, len2;
        for (int i = 0; i < len; i++) {
            len1 = palindSpread(arr, i, i);
            len2 = palindSpread(arr, i, i + 1);
            max = len1 > len2 ? len1 : len2;
            if (max > end - start) {
                // start 为什么这么算？
                start = i - (max - 1) / 2;
                // end 为什么这么算？
                end = start + max;
            }
        }
        return s.substring(start, end);
    }

    private int palindSpread(char[] arr, int left, int right) {
        while (left >= 0 && right < arr.length && arr[left] == arr[right]) {
            left--;
            right++;
        }
        return right - left - 1;
    }
}
// leetcode submit region end(Prohibit modification and deletion)
